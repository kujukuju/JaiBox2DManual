#run {
    assert(size_of(b2WorldManifold) == 32, "b2WorldManifold must be of size 32.");
    assert(size_of(b2Manifold) == 64, "b2Manifold must be of size 64.");
    assert(size_of(b2Transform) == 16, "b2Transform must be of size 16.");
    assert(size_of(b2PointState) == 4, "b2PointState must be of size 4.");
    assert(size_of(b2Shape) == 16, "b2Shape must be of size 16.");
    assert(size_of(b2DistanceProxy) == 32, "b2DistanceProxy must be of size 32.");
    assert(size_of(b2DistanceOutput) == 24, "b2DistanceOutput must be of size 24.");
    assert(size_of(b2SimplexCache) == 12, "b2SimplexCache must be of size 12.");
    assert(size_of(b2DistanceInput) == 104, "b2DistanceInput must be of size 104.");
    assert(size_of(b2TOIOutput) == 8, "b2TOIOutput must be of size 8.");
    assert(size_of(b2TOIInput) == 144, "b2TOIInput must be of size 144.");
    assert(size_of(b2Contact) == 208, "b2Contact must be of size 208.");
    assert(size_of(b2Fixture) == 72, "b2Fixture must be of size 72.");
    assert(size_of(b2BodyDef) == 64, "b2BodyDef must be of size 64.");
    assert(size_of(b2Body) == 184, "b2Body must be of size 184.");
    assert(size_of(b2FixtureDef) == 40, "b2FixtureDef must be of size 40.");
    assert(size_of(b2MassData) == 16, "b2MassData must be of size 16.");
    assert(size_of(b2JointEdge) == 32, "b2JointEdge must be of size 32.");
    assert(size_of(b2ContactEdge) == 32, "b2ContactEdge must be of size 32.");
    assert(size_of(b2World) == 103296, "b2World must be of size 103296.");
    assert(size_of(b2Filter) == 6, "b2Filter must be of size 6.");
    assert(size_of(b2RayCastOutput) == 12, "b2RayCastOutput must be of size 12.");
    assert(size_of(b2RayCastInput) == 20, "b2RayCastInput must be of size 20.");
    assert(size_of(b2AABB) == 16, "b2AABB must be of size 16.");
    assert(size_of(b2DestructionListener) == 8, "b2DestructionListener must be of size 8.");
    assert(size_of(b2ContactFilter) == 8, "b2ContactFilter must be of size 8.");
    assert(size_of(b2ContactListener) == 8, "b2ContactListener must be of size 8.");
    assert(size_of(b2Draw) == 16, "b2Draw must be of size 16.");
    assert(size_of(b2Joint) == 128, "b2Joint must be of size 128.");
    assert(size_of(b2JointDef) == 40, "b2JointDef must be of size 40.");
    assert(size_of(b2QueryCallback) == 8, "b2QueryCallback must be of size 8.");
    assert(size_of(b2RayCastCallback) == 8, "b2RayCastCallback must be of size 8.");
    assert(size_of(b2ContactManager) == 128, "b2ContactManager must be of size 128.");
    assert(size_of(b2Profile) == 32, "b2Profile must be of size 32.");
    assert(size_of(DestructionListenerLink) == 32, "DestructionListenerLink must be of size 32.");
    assert(size_of(RustObject) == 8, "RustObject must be of size 8.");
    assert(size_of(SayGoodbyeToJointCB) == 8, "SayGoodbyeToJointCB must be of size 8.");
    assert(size_of(SayGoodbyeToFixtureCB) == 8, "SayGoodbyeToFixtureCB must be of size 8.");
    assert(size_of(ContactFilterLink) == 24, "ContactFilterLink must be of size 24.");
    assert(size_of(ShouldCollideCB) == 8, "ShouldCollideCB must be of size 8.");
    assert(size_of(ContactListenerLink) == 48, "ContactListenerLink must be of size 48.");
    assert(size_of(BeginContactCB) == 8, "BeginContactCB must be of size 8.");
    assert(size_of(EndContactCB) == 8, "EndContactCB must be of size 8.");
    assert(size_of(PreSolveCB) == 8, "PreSolveCB must be of size 8.");
    assert(size_of(PostSolveCB) == 8, "PostSolveCB must be of size 8.");
    assert(size_of(QueryCallbackLink) == 24, "QueryCallbackLink must be of size 24.");
    assert(size_of(QCReportFixtureCB) == 8, "QCReportFixtureCB must be of size 8.");
    assert(size_of(RayCastCallbackLink) == 24, "RayCastCallbackLink must be of size 24.");
    assert(size_of(RCCReportFixtureCB) == 8, "RCCReportFixtureCB must be of size 8.");
    assert(size_of(b2ChainShape) == 48, "b2ChainShape must be of size 48.");
    assert(size_of(b2EdgeShape) == 56, "b2EdgeShape must be of size 56.");
    assert(size_of(b2CircleShape) == 24, "b2CircleShape must be of size 24.");
    assert(size_of(b2PolygonShape) == 160, "b2PolygonShape must be of size 160.");
    assert(size_of(b2DistanceJointDef) == 72, "b2DistanceJointDef must be of size 72.");
    assert(size_of(b2DistanceJoint) == 240, "b2DistanceJoint must be of size 240.");
    assert(size_of(b2FrictionJointDef) == 64, "b2FrictionJointDef must be of size 64.");
    assert(size_of(b2FrictionJoint) == 240, "b2FrictionJoint must be of size 240.");
    assert(size_of(b2GearJoint) == 352, "b2GearJoint must be of size 352.");
    assert(size_of(b2MotorJointDef) == 64, "b2MotorJointDef must be of size 64.");
    assert(size_of(b2MotorJoint) == 256, "b2MotorJoint must be of size 256.");
    assert(size_of(b2MouseJoint) == 232, "b2MouseJoint must be of size 232.");
    assert(size_of(b2PrismaticJointDef) == 96, "b2PrismaticJointDef must be of size 96.");
    assert(size_of(b2PrismaticJoint) == 320, "b2PrismaticJoint must be of size 320.");
    assert(size_of(b2PulleyJointDef) == 88, "b2PulleyJointDef must be of size 88.");
    assert(size_of(b2PulleyJoint) == 256, "b2PulleyJoint must be of size 256.");
    assert(size_of(b2RevoluteJointDef) == 88, "b2RevoluteJointDef must be of size 88.");
    assert(size_of(b2RevoluteJoint) == 288, "b2RevoluteJoint must be of size 288.");
    assert(size_of(b2RopeJoint) == 232, "b2RopeJoint must be of size 232.");
    assert(size_of(b2LimitState) == 4, "b2LimitState must be of size 4.");
    assert(size_of(b2WeldJointDef) == 72, "b2WeldJointDef must be of size 72.");
    assert(size_of(b2WeldJoint) == 272, "b2WeldJoint must be of size 272.");
    assert(size_of(b2WheelJointDef) == 88, "b2WheelJointDef must be of size 88.");
    assert(size_of(b2WheelJoint) == 288, "b2WheelJoint must be of size 288.");
    assert(size_of(b2Mat22) == 16, "b2Mat22 must be of size 16.");
    assert(size_of(b2Mat33) == 36, "b2Mat33 must be of size 36.");
    assert(size_of(b2Sweep) == 36, "b2Sweep must be of size 36.");
    assert(size_of(b2ContactImpulse) == 20, "b2ContactImpulse must be of size 20.");
    assert(size_of(b2BlockAllocator) == 128, "b2BlockAllocator must be of size 128.");
    assert(size_of(b2FixtureProxy) == 32, "b2FixtureProxy must be of size 32.");
    assert(size_of(b2StackAllocator) == 102936, "b2StackAllocator must be of size 102936.");
    assert(size_of(b2StackEntry) == 16, "b2StackEntry must be of size 16.");
    assert(size_of(b2JointType) == 4, "b2JointType must be of size 4.");
    assert(size_of(b2BroadPhase) == 88, "b2BroadPhase must be of size 88.");
    assert(size_of(b2DynamicTree) == 40, "b2DynamicTree must be of size 40.");
    assert(size_of(b2Pair) == 8, "b2Pair must be of size 8.");
    assert(size_of(b2TreeNode) == 40, "b2TreeNode must be of size 40.");
}

#scope_file

#import "Basic";
