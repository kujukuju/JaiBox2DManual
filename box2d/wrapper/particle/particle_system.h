EXPORT void ParticleContact_set_indices(b2ParticleContact* self, int32 a, int32 b);
EXPORT void ParticleContact_set_weight(b2ParticleContact* self, float32 w);
EXPORT void ParticleContact_set_normal(b2ParticleContact* self, const b2Vec2* n);
EXPORT void ParticleContact_set_flags(b2ParticleContact* self, uint32 f);
EXPORT int32 ParticleContact_get_index_a(b2ParticleContact* self);
EXPORT int32 ParticleContact_get_index_b(b2ParticleContact* self);
EXPORT float32 ParticleContact_get_weight(b2ParticleContact* self);
EXPORT b2Vec2 ParticleContact_get_normal(b2ParticleContact* self);
EXPORT uint32 ParticleContact_get_flags(b2ParticleContact* self);
EXPORT b2ParticleSystemDef* ParticleSystemDef_new();
EXPORT b2ParticleSystemDef ParticleSystemDef_create();
// EXPORT b2ParticleSystem* ParticleSystem_new(b2ParticleSystemDef def);
// EXPORT b2ParticleSystem ParticleSystem_create(b2ParticleSystemDef def);
EXPORT int32 ParticleSystem_create_particle(b2ParticleSystem* self, const b2ParticleDef* def);
EXPORT const b2ParticleHandle* ParticleSystem_get_particle_handle_from_index(b2ParticleSystem* self, const int32 index);
EXPORT void ParticleSystem_destroy_particle(b2ParticleSystem* self, int32 index, bool callDestructionListener);
EXPORT void ParticleSystem_destroy_oldest_particle(b2ParticleSystem* self, const int32 index,const bool callDestructionListener);
EXPORT int32 ParticleSystem_destroy_particles_in_shape(b2ParticleSystem* self, const b2Shape* shape, const b2Transform* xf, bool callDestructionListener);
EXPORT b2ParticleGroup* ParticleSystem_create_particle_group(b2ParticleSystem* self, const b2ParticleGroupDef* def);
EXPORT void ParticleSystem_join_particle_groups(b2ParticleSystem* self, b2ParticleGroup* groupA, b2ParticleGroup* groupB);
EXPORT void ParticleSystem_split_particle_group(b2ParticleSystem* self, b2ParticleGroup* group);
EXPORT b2ParticleGroup* ParticleSystem_get_particle_group_list(b2ParticleSystem* self);
EXPORT int32 ParticleSystem_get_particle_group_count(b2ParticleSystem* self);
EXPORT int32 ParticleSystem_get_particle_count(b2ParticleSystem* self);
EXPORT int32 ParticleSystem_get_max_particle_count(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_max_particle_count(b2ParticleSystem* self, int32 count);
EXPORT uint32 ParticleSystem_get_all_particle_flags(b2ParticleSystem* self);
EXPORT uint32 ParticleSystem_get_all_group_flags(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_paused(b2ParticleSystem* self, bool paused);
EXPORT bool ParticleSystem_get_paused(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_density(b2ParticleSystem* self, float32 density);
EXPORT float32 ParticleSystem_get_density(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_gravity_scale(b2ParticleSystem* self, float32 gravityScale);
EXPORT float32 ParticleSystem_get_gravity_scale(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_damping(b2ParticleSystem* self, float32 damping);
EXPORT float32 ParticleSystem_get_damping(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_static_pressure_iterations(b2ParticleSystem* self, int32 iterations);
EXPORT int32 ParticleSystem_get_static_pressure_iterations(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_radius(b2ParticleSystem* self, float32 radius);
EXPORT float32 ParticleSystem_get_radius(b2ParticleSystem* self);
EXPORT b2Vec2* ParticleSystem_get_position_buffer(b2ParticleSystem* self);
EXPORT b2Vec2* ParticleSystem_get_velocity_buffer(b2ParticleSystem* self);
EXPORT b2ParticleColor* ParticleSystem_get_color_buffer(b2ParticleSystem* self);
// EXPORT b2ParticleGroup* const* ParticleSystem_get_group_buffer(b2ParticleSystem* self);
EXPORT b2ParticleGroup** ParticleSystem_get_group_buffer(b2ParticleSystem* self);
EXPORT float32* ParticleSystem_get_weight_buffer(b2ParticleSystem* self);
EXPORT void** ParticleSystem_get_user_data_buffer(b2ParticleSystem* self);
EXPORT const uint32* ParticleSystem_get_flags_buffer(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_particle_flags(b2ParticleSystem* self, int32 index, uint32 flags);
EXPORT uint32 ParticleSystem_get_particle_flags(b2ParticleSystem* self, const int32 index);
EXPORT void ParticleSystem_set_flags_buffer(b2ParticleSystem* self, uint32* buffer, int32 capacity);
EXPORT void ParticleSystem_set_position_buffer(b2ParticleSystem* self, b2Vec2* buffer, int32 capacity);
EXPORT void ParticleSystem_set_velocity_buffer(b2ParticleSystem* self, b2Vec2* buffer, int32 capacity);
EXPORT void ParticleSystem_set_color_buffer(b2ParticleSystem* self, b2ParticleColor* buffer, int32 capacity);
EXPORT void ParticleSystem_set_user_data_buffer(b2ParticleSystem* self, void** buffer, int32 capacity);
EXPORT const b2ParticleContact* ParticleSystem_get_contacts(b2ParticleSystem* self);
EXPORT int32 ParticleSystem_get_contact_count(b2ParticleSystem* self);
EXPORT const b2ParticleBodyContact* ParticleSystem_get_body_contacts(b2ParticleSystem* self);
EXPORT int32 ParticleSystem_get_body_contact_count(b2ParticleSystem* self);
EXPORT const b2ParticlePair* ParticleSystem_get_pairs(b2ParticleSystem* self);
EXPORT int32 ParticleSystem_get_pair_count(b2ParticleSystem* self);
EXPORT const b2ParticleTriad* ParticleSystem_get_triads(b2ParticleSystem* self);
EXPORT int32 ParticleSystem_get_triad_count(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_stuck_threshold(b2ParticleSystem* self, int32 iterations);
EXPORT const int32* ParticleSystem_get_stuck_candidates(b2ParticleSystem* self);
EXPORT int32 ParticleSystem_get_stuck_candidate_count(b2ParticleSystem* self);
EXPORT float32 ParticleSystem_compute_collision_energy(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_strict_contact_check(b2ParticleSystem* self, bool enabled);
EXPORT bool ParticleSystem_get_strict_contact_check(b2ParticleSystem* self);
EXPORT void ParticleSystem_set_particle_lifetime(b2ParticleSystem* self, const int32 index, const float32 lifetime);
EXPORT float32 ParticleSystem_get_particle_lifetime(b2ParticleSystem* self, const int32 index);
EXPORT void ParticleSystem_set_destruction_by_age(b2ParticleSystem* self, const bool enable);
EXPORT bool ParticleSystem_get_destruction_by_age(b2ParticleSystem* self);
EXPORT const int32* ParticleSystem_get_expiration_time_buffer(b2ParticleSystem* self);
EXPORT float32 ParticleSystem_expiration_time_to_lifetime(b2ParticleSystem* self, const int32 expirationTime);
EXPORT const int32* ParticleSystem_get_index_by_expiration_time_buffer(b2ParticleSystem* self);
EXPORT void ParticleSystem_particle_apply_linear_impulse(b2ParticleSystem* self, int32 index, const b2Vec2* impulse);
EXPORT void ParticleSystem_apply_linear_impulse(b2ParticleSystem* self, int32 firstIndex, int32 lastIndex, const b2Vec2* impulse);
EXPORT void ParticleSystem_particle_apply_force(b2ParticleSystem* self, int32 index, const b2Vec2* force);
EXPORT void ParticleSystem_apply_force(b2ParticleSystem* self, int32 firstIndex, int32 lastIndex, const b2Vec2* force);
EXPORT b2ParticleSystem* ParticleSystem_get_next(b2ParticleSystem* self);
EXPORT void ParticleSystem_query_aabb(b2ParticleSystem* self, b2QueryCallback* callback, const b2AABB* aabb);
EXPORT void ParticleSystem_query_shape_aabb(b2ParticleSystem* self, b2QueryCallback* callback, const b2Shape* shape, const b2Transform* xf);
EXPORT void ParticleSystem_ray_cast(b2ParticleSystem* self, b2RayCastCallback* callback, const b2Vec2* point1, const b2Vec2* point2);
EXPORT void ParticleSystem_compute_aabb(b2ParticleSystem* self, b2AABB* const aabb);