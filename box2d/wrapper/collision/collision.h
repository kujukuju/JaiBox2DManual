EXPORT void WorldManifold_initialize(b2WorldManifold* self, const b2Manifold* manifold, const b2Transform* xf_a, float radius_a, const b2Transform* xf_b, float radius_b);
EXPORT void get_point_states(b2PointState* s1, b2PointState* s2, const b2Manifold* m1, const b2Manifold* m2);
EXPORT bool AABB_is_valid(b2AABB* self);
EXPORT b2Vec2 AABB_get_center(b2AABB* self);
EXPORT b2Vec2 AABB_get_extents(b2AABB* self);
EXPORT float AABB_get_perimeter(b2AABB* self);
EXPORT void AABB_combine(b2AABB* self, const b2AABB* aabb);
EXPORT void AABB_combine_two(b2AABB* self, const b2AABB* aabb1, const b2AABB* aabb2);
EXPORT bool AABB_contains(b2AABB* self, const b2AABB* aabb);
EXPORT bool AABB_ray_cast(b2AABB* self, b2RayCastOutput* output, const b2RayCastInput* input); 
EXPORT void collide_circles(b2Manifold* manifold, const b2CircleShape* circleA, const b2Transform* xfA, const b2CircleShape* circleB, const b2Transform* xfB);
EXPORT void collide_polygon_and_circle(b2Manifold* manifold, const b2PolygonShape* polygonA, const b2Transform* xfA, const b2CircleShape* circleB, const b2Transform* xfB);
EXPORT void collide_polygons(b2Manifold* manifold, const b2PolygonShape* polygonA, const b2Transform* xfA, const b2PolygonShape* polygonB, const b2Transform* xfB);
EXPORT void collide_edge_and_circle(b2Manifold* manifold, const b2EdgeShape* polygonA, const b2Transform* xfA, const b2CircleShape* circleB, const b2Transform* xfB);
EXPORT void collide_edge_and_polygon(b2Manifold* manifold, const b2EdgeShape* edgeA, const b2Transform* xfA, const b2PolygonShape* circleB, const b2Transform* xfB);
EXPORT uint32_t clip_segment_to_line(b2ClipVertex* vOut, const b2ClipVertex* vIn, const b2Vec2* normal, float offset, int32_t vertexIndexA);
EXPORT bool test_overlap(const b2Shape* shapeA, int32_t indexA, const b2Shape* shapeB, int32_t indexB, const b2Transform* xfA, const b2Transform* xfB);
EXPORT bool test_overlap_aabb(const b2AABB* a, const b2AABB* b);